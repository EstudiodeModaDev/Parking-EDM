/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 * This file is autogenerated. Do not edit this file directly.
 */

import { getPowerSdkInstance } from '@pa-client/power-code-sdk/lib/';
import { dataSourcesInfo } from '../../.power/appschemas/dataSourcesInfo';
import type { IOperationResult } from '@pa-client/power-code-sdk/lib/';
import type { IGetOptions, IGetAllOptions } from '../Models/CommonModels';
import type { ColaboradoresFijos } from '../Models/ColaboradoresFijosModel';

export class ColaboradoresFijosService {
  private static readonly dataSourceName = 'colaboradores fijos';

  public static async create(record: Omit<ColaboradoresFijos, 'ID'>): Promise<IOperationResult<ColaboradoresFijos>> {
    const result = await getPowerSdkInstance(dataSourcesInfo).Data.createRecordAsync<Omit<ColaboradoresFijos, 'ID'>, ColaboradoresFijos>(
      ColaboradoresFijosService.dataSourceName,
      record
    );
    return result;
  }

  public static async update(id: string, changedFields: Partial<Omit<ColaboradoresFijos, 'ID'>>): Promise<IOperationResult<ColaboradoresFijos>> {
    const result = await getPowerSdkInstance(dataSourcesInfo).Data.updateRecordAsync<Partial<Omit<ColaboradoresFijos, 'ID'>>, ColaboradoresFijos>(
      ColaboradoresFijosService.dataSourceName,
      id.toString(),
      changedFields
    );
    return result;
  }

  public static async delete(id: string): Promise<void> {
    await getPowerSdkInstance(dataSourcesInfo).Data.deleteRecordAsync(ColaboradoresFijosService.dataSourceName, id.toString());
  }

  public static async get(id: string, options?: IGetOptions): Promise<IOperationResult<ColaboradoresFijos>> {
    const result = await getPowerSdkInstance(dataSourcesInfo).Data.retrieveRecordAsync<ColaboradoresFijos>(
      ColaboradoresFijosService.dataSourceName,
      id.toString(),
      options
    );
    return result;
  }

  public static async getAll(options?: IGetAllOptions): Promise<IOperationResult<ColaboradoresFijos[]>> {
    const result = await getPowerSdkInstance(dataSourcesInfo).Data.retrieveMultipleRecordsAsync<ColaboradoresFijos>(
      ColaboradoresFijosService.dataSourceName,
      options
    );
    return result;
  }
}
